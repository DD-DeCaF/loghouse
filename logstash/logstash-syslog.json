input {
  udp {
    port => 5000
    type => syslog
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:container_name} (%{NOTSPACE:container_name}\.%{NOTSPACE:stack_name}\.%{NOTSPACE:container_id}|%{NOTSPACE:container_name}) %{POSINT:syslog_pid} - - ((%{IP:ip_address})?( - - )?\[(%{HTTPDATE:timestamp_http}|%{TIMESTAMP_ISO8601:timestamp_http}|(?<timestamp_http>%{MONTHDAY}(/|-)%{MONTH}(/|-)%{YEAR} %{TIME}))\] \"%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion}\" %{NUMBER:response} (?:%{NUMBER:bytes}|-)( \"(?:%{URI:referrer}|-)\")?( %{QS:agent})?)?" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    geoip {
      source => "ip_address"
      target => "geoip"
      add_tag => [ "nginx-geoip" ]
    }
    if !("_grokparsefailure" in [tags]) {
      mutate {
        replace => [ "@source_host", "%{syslog_hostname}" ]
        replace => [ "@message", "%{syslog_message}" ]
      }
    }
    mutate {
      remove_field => [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
      convert => { "bytes" => "integer" }
    }
  }
}

output {
  elasticsearch { }
  #stdout { codec => rubydebug }
}
