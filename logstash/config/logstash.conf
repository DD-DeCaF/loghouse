input {
  udp {
    port => 5000
    type => syslog
  }

  beats {
    port => 5044
  }

  udp {
    port => 6666
    type => raw
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:container_name} (%{NOTSPACE:container_name}\.%{NOTSPACE:stack_name}\.%{NOTSPACE:container_id}|%{NOTSPACE:container_name}) %{POSINT:syslog_pid} - - (((%{IP:ip_address})? - - \[(%{HTTPDATE:timestamp_http}|%{TIMESTAMP_ISO8601:timestamp_http}|(?<timestamp_http>%{MONTHDAY}(/|-)%{MONTH}(/|-)%{YEAR} %{TIME}))\] \"%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion}\" %{NUMBER:response} (%{NUMBER:bytes}|-)(?: \"(%{URI:referrer}|-)\" %{QS:agent} %{QS:http_x_forwarded_for} (%{SECOND:response_time}|-))?)|(Gene added: %{NOTSPACE:gene_added})|(Gene knockout: %{NOTSPACE:gene_knockout})|(%{DATA}Call prediction for {'universal_model_id': '%{DATA:pathways_universal_model_id}', 'product_id': '%{DATA:pathways_product_id}', 'model_id': '%{DATA:pathways_model_id}', 'carbon_source_id': '%{DATA:pathways_carbon_source_id}'})|%{GREEDYDATA:message_text})" }
    }
    syslog_pri { }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    geoip {
      source => "ip_address"
      target => "geoip"
      add_tag => [ "nginx-geoip" ]
    }
    mutate {
      remove_field => [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
      convert => { "bytes" => "integer" }
      convert => { "response_time" => "float" }
    }
  }

  if ![@metadata][index] {
    if [@metadata][beat] {
      mutate { add_field => [ "[@metadata][index]", "%{[@metadata][beat]}" ]}
    } else {
      # Default to type field
      mutate { add_field => [ "[@metadata][index]", "%{type}" ]}
    }
  }
}

output {
  elasticsearch {
    hosts => "${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"
    index => "logstash-%{[@metadata][index]}-%{+YYYY.MM}"
    user => "logstash"
    password => "${LOGSTASH_PWD}"
    ssl => true
    ssl_certificate_verification => true
    truststore => "/etc/elasticsearch/searchguard/ssl/truststore.jks"
    truststore_password => "${TS_PWD}"
  }
}
